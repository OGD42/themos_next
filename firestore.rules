rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if isSignedIn();
    }
    
    match /conversation/{teamsId} {
      allow read: if isSignedIn();
      allow write, update: if isSignedIn() && resourceMatchesEmail();
      allow delete: if false;
    }

    function isSignedIn() {
      return request.auth != null
    }
    function resourceMatchesEmail() {
        return request.auth.uid == request.resource.data.user_id;
    }

     // [WRITE] Data that is sent to a Firestore document
    function incomingData() {
      return request.resource.data;
    }
    // Existing data on resource
    function existingData() {
      return resource.data;
    }
     function isUserPartOfTeam() {
      return incomingData().user_id == getUser().user_id;
    }

    function canUserGetThis() {
      return existingData().user_id == getUser().user_id;
    }
  }
}